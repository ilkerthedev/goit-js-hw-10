{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst myForm = document.querySelector(\".form\");\nconst formInput = document.querySelector('input[name=\"delay\"]');\nconst fulfilledInput = document.querySelector('input[value=\"fulfilled\"]');\nconst rejectedInput = document.querySelector('input[value=\"rejected\"]');\n\nmyForm.addEventListener('submit', formSubm);\nfunction formSubm(event) {\n    event.preventDefault()\n    const userDelay = formInput.value;\n   const btnState = event.currentTarget.elements.state.value;\n\nnew Promise((resolve, reject) => {\n    setTimeout(() => {\n        if (btnState === \"fulfilled\") {\n        resolve(userDelay);\n      } else {\n        reject(userDelay);\n      }\n    }, userDelay);\n  })\n.then(delay => {\n      iziToast.success({\n        title: 'Success',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n      });\n    })\n.catch(delay => {\n      iziToast.error({\n        title: 'Error',\n        message: `❌ Rejected promise in ${delay}ms`,\n      });\n    });\n}"],"names":["myForm","formInput","formSubm","event","userDelay","btnState","resolve","reject","delay","iziToast"],"mappings":"wIAGA,MAAMA,EAAS,SAAS,cAAc,OAAO,EACvCC,EAAY,SAAS,cAAc,qBAAqB,EACvC,SAAS,cAAc,0BAA0B,EAClD,SAAS,cAAc,yBAAyB,EAEtED,EAAO,iBAAiB,SAAUE,CAAQ,EAC1C,SAASA,EAASC,EAAO,CACrBA,EAAM,eAAgB,EACtB,MAAMC,EAAYH,EAAU,MACvBI,EAAWF,EAAM,cAAc,SAAS,MAAM,MAEvD,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC7B,WAAW,IAAM,CACTF,IAAa,YACjBC,EAAQF,CAAS,EAEjBG,EAAOH,CAAS,CAEnB,EAAEA,CAAS,CAChB,CAAG,EACF,KAAKI,GAAS,CACTC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,0BAA0BD,CAAK,IAChD,CAAO,CACP,CAAK,EACJ,MAAMA,GAAS,CACVC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBD,CAAK,IAC/C,CAAO,CACP,CAAK,CACL"}