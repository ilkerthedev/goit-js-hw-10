{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    chosenDate = selectedDates[0];\n    const now = new Date;\n    if (chosenDate <= now) {\n      iziToast.error({\n    title: 'Error',\n    message: 'Please choose a date in the future',\n      }); \n      StartBtn.disabled = true;\n    } else {\n      StartBtn.disabled = false;\n    }\n\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst StartBtn = document.querySelector(\"[data-start]\");\nconst daysEl = document.querySelector(\"[data-days]\");\nconst hoursEl = document.querySelector(\"[data-hours]\");\nconst minutesEl = document.querySelector(\"[data-minutes]\");\nconst secondsEl= document.querySelector(\"[data-seconds]\");\n\nStartBtn.disabled = true;\nlet difference;\nlet chosenDate;\nconsole.log(new Date);\n\nflatpickr(input, options);\n\nStartBtn.addEventListener('click', startClick);\n\nfunction startClick() {\n  StartBtn.disabled = true;\n  input.disabled = true;\n\n  const myInterval = setInterval(() => {\n    const now = new Date();\n    difference = chosenDate - now;\n     const { days, hours, minutes, seconds } = convertMs(difference);\n      daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n\n       if (difference <= 0) {\n      clearInterval(myInterval);\n     input.disabled = false;\n     daysEl.textContent = \"00\";\n    hoursEl.textContent = \"00\";\n    minutesEl.textContent = \"00\";\n    secondsEl.textContent = \"00\";\n    return;\n    }\n  }, 1000);\n    \n};"],"names":["options","selectedDates","chosenDate","iziToast","StartBtn","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","input","daysEl","hoursEl","minutesEl","secondsEl","difference","flatpickr","startClick","myInterval"],"mappings":"+IAMA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAaD,EAAc,CAAC,EAExBC,GADQ,IAAI,MAEdC,EAAS,MAAM,CACjB,MAAO,QACP,QAAS,oCACb,CAAO,EACDC,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAGvB,CACH,EAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDT,EAAW,SAAS,cAAc,cAAc,EAChDU,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAW,SAAS,cAAc,gBAAgB,EAExDb,EAAS,SAAW,GACpB,IAAIc,EACAhB,EACJ,QAAQ,IAAI,IAAI,IAAI,EAEpBiB,EAAUN,EAAOb,CAAO,EAExBI,EAAS,iBAAiB,QAASgB,CAAU,EAE7C,SAASA,GAAa,CACpBhB,EAAS,SAAW,GACpBS,EAAM,SAAW,GAEjB,MAAMQ,EAAa,YAAY,IAAM,CAEnCH,EAAahB,EADD,IAAI,KAEf,KAAM,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUa,CAAU,EAM5D,GALDJ,EAAO,YAAcH,EAAeJ,CAAI,EAC5CQ,EAAQ,YAAcJ,EAAeH,CAAK,EAC1CQ,EAAU,YAAcL,EAAeF,CAAO,EAC9CQ,EAAU,YAAcN,EAAeD,CAAO,EAErCQ,GAAc,EAAG,CACtB,cAAcG,CAAU,EACzBR,EAAM,SAAW,GACjBC,EAAO,YAAc,KACtBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxB,MACC,CACF,EAAE,GAAI,CAET"}